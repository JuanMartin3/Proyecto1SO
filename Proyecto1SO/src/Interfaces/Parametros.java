/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package Interfaces;

import java.io.*;
import javax.swing.JSpinner;
import javax.swing.SpinnerNumberModel;


/**
 *
 * @author danie
 */
public class Parametros extends javax.swing.JFrame {

    /**
     * Creates new form Parametros
     */
    public Parametros() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jSpinner1 = new javax.swing.JSpinner();
        jSpinner2 = new javax.swing.JSpinner();
        jSpinner3 = new javax.swing.JSpinner();
        jSpinner4 = new javax.swing.JSpinner();
        jSpinner5 = new javax.swing.JSpinner();
        jSpinner6 = new javax.swing.JSpinner();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        jSpinner7 = new javax.swing.JSpinner();
        jSpinner8 = new javax.swing.JSpinner();
        jSpinner9 = new javax.swing.JSpinner();
        jSpinner10 = new javax.swing.JSpinner();
        jSpinner11 = new javax.swing.JSpinner();
        jSpinner12 = new javax.swing.JSpinner();
        jButton4 = new javax.swing.JButton();
        jButton5 = new javax.swing.JButton();
        jSpinner13 = new javax.swing.JSpinner();
        jSpinner14 = new javax.swing.JSpinner();
        jButton6 = new javax.swing.JButton();
        jButton7 = new javax.swing.JButton();
        jSpinner15 = new javax.swing.JSpinner();
        depurar = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());
        jPanel1.add(jSpinner1, new org.netbeans.lib.awtextra.AbsoluteConstraints(780, 170, 60, 20));
        jPanel1.add(jSpinner2, new org.netbeans.lib.awtextra.AbsoluteConstraints(780, 225, 60, 20));
        jPanel1.add(jSpinner3, new org.netbeans.lib.awtextra.AbsoluteConstraints(780, 280, 60, 20));
        jPanel1.add(jSpinner4, new org.netbeans.lib.awtextra.AbsoluteConstraints(780, 350, 60, 20));
        jPanel1.add(jSpinner5, new org.netbeans.lib.awtextra.AbsoluteConstraints(780, 420, 60, 20));
        jPanel1.add(jSpinner6, new org.netbeans.lib.awtextra.AbsoluteConstraints(780, 475, 60, 20));

        jButton1.setText("Cargar");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        jPanel1.add(jButton1, new org.netbeans.lib.awtextra.AbsoluteConstraints(690, 540, -1, -1));

        jButton2.setText("Guardar");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });
        jPanel1.add(jButton2, new org.netbeans.lib.awtextra.AbsoluteConstraints(870, 540, -1, -1));

        jButton3.setText("Volver");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });
        jPanel1.add(jButton3, new org.netbeans.lib.awtextra.AbsoluteConstraints(460, 550, -1, -1));
        jPanel1.add(jSpinner7, new org.netbeans.lib.awtextra.AbsoluteConstraints(120, 170, 60, 20));
        jPanel1.add(jSpinner8, new org.netbeans.lib.awtextra.AbsoluteConstraints(120, 225, 60, 20));
        jPanel1.add(jSpinner9, new org.netbeans.lib.awtextra.AbsoluteConstraints(120, 280, 60, 20));
        jPanel1.add(jSpinner10, new org.netbeans.lib.awtextra.AbsoluteConstraints(120, 350, 60, 20));
        jPanel1.add(jSpinner11, new org.netbeans.lib.awtextra.AbsoluteConstraints(120, 420, 60, 20));
        jPanel1.add(jSpinner12, new org.netbeans.lib.awtextra.AbsoluteConstraints(120, 475, 60, 20));

        jButton4.setText("Guardar");
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });
        jPanel1.add(jButton4, new org.netbeans.lib.awtextra.AbsoluteConstraints(220, 540, -1, -1));

        jButton5.setText("Cargar");
        jButton5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton5ActionPerformed(evt);
            }
        });
        jPanel1.add(jButton5, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 540, -1, -1));
        jPanel1.add(jSpinner13, new org.netbeans.lib.awtextra.AbsoluteConstraints(280, 90, 60, 20));
        jPanel1.add(jSpinner14, new org.netbeans.lib.awtextra.AbsoluteConstraints(640, 90, 60, 20));
        jSpinner14.getAccessibleContext().setAccessibleName("");

        jButton6.setText("Cargar");
        jButton6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton6ActionPerformed(evt);
            }
        });
        jPanel1.add(jButton6, new org.netbeans.lib.awtextra.AbsoluteConstraints(400, 130, -1, -1));

        jButton7.setText("Guardar");
        jButton7.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton7ActionPerformed(evt);
            }
        });
        jPanel1.add(jButton7, new org.netbeans.lib.awtextra.AbsoluteConstraints(520, 130, -1, -1));
        jPanel1.add(jSpinner15, new org.netbeans.lib.awtextra.AbsoluteConstraints(470, 90, 60, 20));

        depurar.setText("Depurar txt");
        depurar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                depurarActionPerformed(evt);
            }
        });
        jPanel1.add(depurar, new org.netbeans.lib.awtextra.AbsoluteConstraints(450, 510, -1, -1));

        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/Parametros 3.png"))); // NOI18N
        jPanel1.add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, -1, -1));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here: APPLE C
    try {
        BufferedReader reader = new BufferedReader(new FileReader("APPLE.txt"));
        String line;
        while ((line = reader.readLine()) != null) {
            String[] partes = line.split("=");
            if (partes[0].equals("Productor Placa")) {
                int productorPlaca = Integer.parseInt(partes[1]);
                jSpinner1.setValue(productorPlaca);
            } else if (partes[0].equals("Productor CPU")) {
                int productorCPU = Integer.parseInt(partes[1]);
                jSpinner2.setValue(productorCPU);
            } else if (partes[0].equals("Productor RAM")) {
                int productorRAM = Integer.parseInt(partes[1]);
                jSpinner3.setValue(productorRAM);
            } else if (partes[0].equals("Productor Fuente")) {
                int productorFuente = Integer.parseInt(partes[1]);
                jSpinner4.setValue(productorFuente);
            } else if (partes[0].equals("Productor GPU")) {
                int productorGPU = Integer.parseInt(partes[1]);
                jSpinner5.setValue(productorGPU);
            } else if (partes[0].equals("Ensamblador")) {
                int ensamblador = Integer.parseInt(partes[1]);
                jSpinner6.setValue(ensamblador);
            }
        }
        reader.close();
        System.out.println("Datos cargados exitosamente.");
    } catch (IOException e) {
        e.printStackTrace();
        System.out.println("Error al cargar los datos.");
    }
    
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        // TODO add your handling code here:
        
        Menu newframe = new Menu();
        
        newframe.setVisible(true);
        
        this.dispose();
    }//GEN-LAST:event_jButton3ActionPerformed

    private void jButton7ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton7ActionPerformed
        // TODO add your handling code here: Tiempo G
        try {
        FileWriter writer = new FileWriter("Tiempo.txt");
        writer.write("Segundos por d√≠a=" + jSpinner14.getValue() + "\n");
        writer.write("Deadline Day=" + jSpinner13.getValue() + "\n");
        writer.write("Dias Simulaci√≥n=" + jSpinner15.getValue() + "\n");
        writer.close();
        System.out.println("Datos guardados exitosamente.");
    } catch (IOException e) {
        e.printStackTrace();
        System.out.println("Error al guardar los datos.");
    }

        
    }//GEN-LAST:event_jButton7ActionPerformed

    private void jButton6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton6ActionPerformed
        // TODO add your handling code here: Tiempo
       try {
        BufferedReader reader = new BufferedReader(new FileReader("Tiempo.txt"));
        String line;
        while ((line = reader.readLine()) != null) {
            String[] partes = line.split("=");
            if (partes[0].equals("Segundos por d√≠a")) {
                int diasEnSegundos = Integer.parseInt(partes[1]);
                jSpinner14.setValue(diasEnSegundos);
            } else if (partes[0].equals("Deadline Day")) {
                int deadlineDay = Integer.parseInt(partes[1]);
                jSpinner13.setValue(deadlineDay);
            } else if (partes[0].equals("Dias Simulaci√≥n")) {
                int diasSim = Integer.parseInt(partes[1]);
                jSpinner15.setValue(diasSim);
            }
        }
        reader.close();
        System.out.println("Datos cargados exitosamente.");
    } catch (IOException e) {
        e.printStackTrace();
        System.out.println("Error al cargar los datos.");
    }

    
    }//GEN-LAST:event_jButton6ActionPerformed

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        // TODO add your handling code here:  MSI G
        try {
        FileWriter writer = new FileWriter("MSI.txt");
        writer.write("Productor Placa=" + jSpinner7.getValue() + "\n");
        writer.write("Productor CPU=" + jSpinner8.getValue() + "\n");
        writer.write("Productor RAM=" + jSpinner9.getValue() + "\n");
        writer.write("Productor Fuente=" + jSpinner10.getValue() + "\n");
        writer.write("Productor GPU=" + jSpinner11.getValue() + "\n");
        writer.write("Ensamblador=" + jSpinner12.getValue() + "\n");
        writer.close();
        System.out.println("Datos guardados exitosamente.");
    } catch (IOException e) {
        e.printStackTrace();
        System.out.println("Error al guardar los datos.");
    
        }
    }//GEN-LAST:event_jButton4ActionPerformed

    private void jButton5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton5ActionPerformed
        // TODO add your handling code here: MSI C
        try {
        BufferedReader reader = new BufferedReader(new FileReader("MSI.txt"));
        String line;
        while ((line = reader.readLine()) != null) {
            String[] partes = line.split("=");
            if (partes[0].equals("Productor Placa")) {
                int productorPlaca = Integer.parseInt(partes[1]);
                jSpinner7.setValue(productorPlaca);
            } else if (partes[0].equals("Productor CPU")) {
                int productorCPU = Integer.parseInt(partes[1]);
                jSpinner8.setValue(productorCPU);
            } else if (partes[0].equals("Productor RAM")) {
                int productorRAM = Integer.parseInt(partes[1]);
                jSpinner9.setValue(productorRAM);
            } else if (partes[0].equals("Productor Fuente")) {
                int productorFuente = Integer.parseInt(partes[1]);
                jSpinner10.setValue(productorFuente);
            } else if (partes[0].equals("Productor GPU")) {
                int productorGPU = Integer.parseInt(partes[1]);
                jSpinner11.setValue(productorGPU);
            } else if (partes[0].equals("Ensamblador")) {
                int ensamblador = Integer.parseInt(partes[1]);
                jSpinner12.setValue(ensamblador);
            }
        }
        reader.close();
        System.out.println("Datos cargados exitosamente.");
    } catch (IOException e) {
        e.printStackTrace();
        System.out.println("Error al cargar los datos.");
    }
    }//GEN-LAST:event_jButton5ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // TODO add your handling code here: APPLE G
        try {
        FileWriter writer = new FileWriter("APPLE.txt");
        writer.write("Productor Placa=" + jSpinner1.getValue() + "\n");
        writer.write("Productor CPU=" + jSpinner2.getValue() + "\n");
        writer.write("Productor RAM=" + jSpinner3.getValue() + "\n");
        writer.write("Productor Fuente=" + jSpinner4.getValue() + "\n");
        writer.write("Productor GPU=" + jSpinner5.getValue() + "\n");
        writer.write("Ensamblador=" + jSpinner6.getValue() + "\n");
        writer.close();
        System.out.println("Datos guardados exitosamente.");
    } catch (IOException e) {
        e.printStackTrace();
        System.out.println("Error al guardar los datos.");
    
        }
    }//GEN-LAST:event_jButton2ActionPerformed

    private void depurarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_depurarActionPerformed
        // TODO add your handling code here:
         try {
        FileWriter writer = new FileWriter("Datos Apple.txt");
        writer.write("Utilidad Apple=" + 0 + "\n");
        writer.write("Costo Operativo Apple=" +  0+ "\n");
        writer.write("Ganancias Brutas Apple=" +  0 + "\n");
        writer.write("Multas PM Apple=" +  0 + "\n");
        writer.write("CPU Apple=" + 0 + "\n");
        writer.write("Placas Apple=" +  0 + "\n");
        writer.write("RAM Apple=" +  0 + "\n");
        writer.write("Fuentes Apple=" +  0 + "\n");
        writer.write("GPU Apple=" + 0 + "\n");
        writer.write("PCN Apple=" +  0 + "\n");
        writer.write("PCGPU Apple=" +  0 + "\n");
        writer.close();
        System.out.println("Datos guardados exitosamente.");
    } catch (IOException e) {
        e.printStackTrace();
        System.out.println("Error al guardar los datos.");
    }
        try {
        FileWriter writer = new FileWriter("Datos MSI.txt");
        writer.write("Utilidad MSI=" + 0 + "\n");
        writer.write("Costo Operativo MSI=" +  0 + "\n");
        writer.write("Ganancias Brutas MSI=" +  0 + "\n");
        writer.write("Multas PM MSI=" +  0 + "\n");
        writer.write("CPU MSI=" + 0 + "\n");
        writer.write("Placa MSI=" +  0 + "\n");
        writer.write("RAM MSI=" +  0 + "\n");
        writer.write("Fuentes MSI=" +  0 + "\n");
        writer.write("GPU MSI=" + 0 + "\n");
        writer.write("PCN MSI=" +  0 + "\n");
        writer.write("PCGPU MSI=" +  0 + "\n");
        writer.close();
        System.out.println("Datos guardados exitosamente.");
    } catch (IOException e) {
        e.printStackTrace();
        System.out.println("Error al guardar los datos.");
    }

    }//GEN-LAST:event_depurarActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Parametros.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Parametros.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Parametros.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Parametros.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Parametros().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton depurar;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JButton jButton5;
    private javax.swing.JButton jButton6;
    private javax.swing.JButton jButton7;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JSpinner jSpinner1;
    private javax.swing.JSpinner jSpinner10;
    private javax.swing.JSpinner jSpinner11;
    private javax.swing.JSpinner jSpinner12;
    private javax.swing.JSpinner jSpinner13;
    private javax.swing.JSpinner jSpinner14;
    private javax.swing.JSpinner jSpinner15;
    private javax.swing.JSpinner jSpinner2;
    private javax.swing.JSpinner jSpinner3;
    private javax.swing.JSpinner jSpinner4;
    private javax.swing.JSpinner jSpinner5;
    private javax.swing.JSpinner jSpinner6;
    private javax.swing.JSpinner jSpinner7;
    private javax.swing.JSpinner jSpinner8;
    private javax.swing.JSpinner jSpinner9;
    // End of variables declaration//GEN-END:variables
}
